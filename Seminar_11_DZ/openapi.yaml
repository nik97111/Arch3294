openapi: 3.0.3
info:
  title: Robot service 3.0
  description: |-
    API сервис управления роботом-пылесосом

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost:9669
tags:
  - name: User
    description: Контроллер пользователя
  - name: Schedule
    description: Контроллер расписания
  - name: Group
    description: Контроллер группы
  - name: Robot
    description: Контроллер робота
    
paths:
  /User:
    post:
      tags:
        - User
      summary: Добавить пользователя
      description: Добавить пользователя в базу
      operationId: addUser
      requestBody:
        description: Создание нового пользователя в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
   
  /User/UpdateById/{userId}:
    put:
      tags:
        - User
      summary: Обновление пользователя
      description: Обновляет информацию о пользователе
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: Обновляет пользователя в базе
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid id supplier
        '404':
          description: User not founde
        '405':
          description: Invalid exception
          
  /User/findById/{userId}:
    get:
      tags:
        - User
      summary: Найти пользователя по ID
      description: Вернуть одного пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
          
  /User/deleteById/{userId}:      
    delete:
      tags:
        - User
      summary: Удаляет пользователя
      description: Удаляет пользователя
      operationId: deleteUser
      parameters:
        - name: userId
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid User value
          
        
  /Group:
    post:
      tags:
        - Group
      summary: Добавить группу
      description: Добавить группу в базу
      operationId: addGroup
      requestBody:
        description: Создание новой группы в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
  
    put:
      tags:
        - Group
      summary: Обновить группу
      description: Обновить группу
      operationId: updateGroup
      requestBody:
        description: Обновить существующую группу в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
        '405':
          description: Validation exception
          
  /Group/findById/{groupId}:
    get:
      tags:
        - Group
      summary: Найти группу по ID
      description: Вернуть группу
      operationId: getGroupById
      parameters:
        - name: groupId
          in: path
          description: Идентификатор группы
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
          
  /Group/deleteById/{groupId}:      
    delete:
      tags:
        - Group
      summary: Удаляет группу
      description: Удаляет группу
      operationId: deleteGroup
      parameters:
        - name: groupId
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: groupId
          in: path
          description: ID группы
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid Group value
          
          
  /Robot:
    put:
      tags:
        - Robot
      summary: Обновить робота
      description: Обновить робота
      operationId: updateRobot
      requestBody:
        description: Обновить робота в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
          application/xml:
            schema:
              $ref: '#/components/schemas/Robot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Robot'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Robot'
        '400':
          description: Invalid ID supplied
        '404':
          description: Robot not found
        '405':
          description: Validation exception
          
    post:
      tags:
        - Robot
      summary: Добавить робота
      description: Добавить робота
      operationId: addRobot
      requestBody:
        description: Добавление робота в базу
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
          application/xml:
            schema:
              $ref: '#/components/schemas/Robot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Robot'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Robot'
        '405':
          description: Invalid input
          
  /Robot/findById/{robotId}:
    get:
      tags:
        - Robot
      summary: Найти робота-пылесоса по ID
      description: Вернуть одного робота-пылесоса
      operationId: getRobotById
      parameters:
        - name: robotId
          in: path
          description: Идентификатор робота-пылесоса
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
 
  /Robot/deleteById/{robotId}:      
    delete:
      tags:
        - Robot
      summary: Удаляет робота
      description: Удаляет робота
      operationId: deleteRobot
      parameters:
        - name: robotId
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: robotId
          in: path
          description: ID робота
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid Robot value
          
          
  /Schedule:
    put:
      tags:
        - Schedule
      summary: Обновить расписание
      description: Обновить расписание
      operationId: updateSchedule
      requestBody:
        description: Обновляет расписание в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Invalid ID supplied
        '404':
          description: Schedule not found
        '405':
          description: Validation exception
          
    post:
      tags:
        - Schedule
      summary: Добавить расписание
      description: Добавить расписание в базу
      operationId: addSchedule
      requestBody:
        description: Создать новое расписание в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        '405':
          description: Invalid input
          
  /Schedule/findById/{Id}:
    get:
      tags:
        - Schedule
      summary: Найти расписание по ID
      description: Добавление расписания по ID
      operationId: getScheduleById
      parameters:
        - name: Id
          in: path
          description: Получение расписания в базе
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Invalid ID supplied
        '404':
          description: Schedule not found
          
  /Schedule/deleteById/{sheduleId}:      
    delete:
      tags:
        - Schedule
      summary: Удаляет расписание
      description: Удаляет расписание
      operationId: deleteShedule
      parameters:
        - name: scheduleId
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: sheduleId
          in: path
          description: Расписание по ID 
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid schedule


   
components:
  schemas:
  
    User:
      required:
        - email
        - passHash
        - robotSNHash
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        email:
          type: string
          example: somemail@mail.ru
        passHash:
          type: integer
          format: int64
          example: 23412
        robotSNHash:
          type: integer
          format: int64
          example: 23412
      xml:
        name: pet
  
    Group:
      required:
        - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
      xml:
        name: Group
        
    Schedule:
      required:
        - dateTime
        - mode
        - robotId
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        dateTime:
          type: string
          example: dd.mm.yyyy-hh:mm:ss
        mode:
          type: integer
          format: int64
          example: 10
        robotId:
          type: integer
          format: int64
          example: 10
      xml:
        name: Schedule
  
    Robot:
      required:
        - model
        - version
        - charge
        - garbageContainer
        - robotPollution
        - nextService
        - serialNumber
        - ipAddress
        - groupId
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        model:
          type: string
          example: something
        version:
          type: string
          example: something
        charge:
          type: integer
          format: int64
          example: 10
        garbageContainer:
          type: integer
          format: int64
          example: 10
        robotPollution:
          type: integer
          format: int64
          example: 10
        nextService:
          type: integer
          format: int64
          example: 10
        serialNumber:
          type: string
          example: something
        ipAddress:
          type: integer
          format: int64
          example: 10
        groupId:
          type: integer
          format: int64
          example: 10
      xml:
        name: Robot
  
  requestBodies:
  
    User:
      description: ID пользователя
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
            
    UserArray:
      description: Добавление пользователя в базу
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
              
    Group:
      description: ID группы
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
        application/xml:
          schema:
            $ref: '#/components/schemas/Group'
            
    GroupArray:
      description: Добавление группы в базу
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Group'
    
    Robot:
      description: ID робота
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Robot'
        application/xml:
          schema:
            $ref: '#/components/schemas/Robot'
            
    RobotArray:
      description: Добавление робота в базу
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Robot'
              
    Schedule:
      description: ID расписания
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
        application/xml:
          schema:
            $ref: '#/components/schemas/Schedule'
            
    ScheduleArray:
      description: Добавление расписания в базу
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Schedule'